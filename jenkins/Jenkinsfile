def nodeImage // node production build image
def dockerImage // end result for deploy to docker hub

pipeline {
    agent any
    tools {
      'org.jenkinsci.plugins.docker.commons.tools.DockerTool' 'docker'
    }
    environment {
        CI = 'true'
        registry = "bb1296/resume" // docker hub repository
        registryCredential = 'docker-credentials' // jenkins > global credentials
    }
    stages {
        stage('Initialization'){
            steps{
                script{
                    nodeImage = docker.image('node:lts-bullseye-slim')
                    nodeImage.pull()
                    nodeImage.inside {
                        checkout scm
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Build'){
            steps{
                script{
                    nodeImage.inside{
                        sh "chmod +x -R ${env.WORKSPACE}"
                        sh './jenkins/scripts/deliver.sh'
                        sh './jenkins/scripts/kill.sh'
                        sh 'tar -cvf build.tar build'
                        stash(name: 'build', includes: 'build.tar') // archive to use in deploy stage
                        archiveArtifacts artifacts: 'build.tar', fingerprint: true // archive for jenkins artifacts
                    }
                }
            }
        }

        stage('Deploy to Docker Hub'){
            steps{
                script{
                    docker.withRegistry( '', registryCredential ) {
                        unstash('build')
                        sh 'tar -xvf build.tar'
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"
                        dockerImage.push()
                        sh "docker rmi $registry:$BUILD_NUMBER" // cleaning
                    }
                }
            }
        }
    }
}